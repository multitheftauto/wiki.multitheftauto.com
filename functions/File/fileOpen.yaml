shared: &shared
  name: fileOpen
  notes:
    - type: 'important'
      content: To prevent memory leaks, ensure each successful call to [[fileOpen]] has a matching call to [[fileClose]].
  oop:
    entity: file
    constructorclass: File
  description: Opens an existing file for reading and writing.
  parameters:
    - name: 'filePath'
      type: 'string'
      description: |
        The [filepath](/filepath) of the file in the following format: `:resourceName/path`. `resourceName` is the name of the resource the file is in, and 'path' is the path from the root directory of the resource to the file.
        For example, if there is a file named `coolObjects.txt` in the resource `objectSearch`, it can be opened from another resource this way: `fileOpen(":objectSearch/coolObjects.txt")`.
        If the file is in the current resource, only the file path is necessary, e.g. `fileOpen("coolObjects.txt")`.
    - name: 'readOnly'
      type: 'bool'
      description: By default, the file is opened with reading and writing access. You can specify true for this parameter if you only need reading access.
  returns:
    description: If successful, returns a file handle for the file. Otherwise returns false (f.e. if the file doesn't exist).
    values:
      - type: file|false
        name: result
  examples:
    - path: 'examples/fileOpen-1.lua'
      description: This example opens the file test.txt that is in the root of the current resource, and outputs its contents to the console.
    - path: 'examples/fileOpen-2.lua'
      description: This example show how to append data to an existing file