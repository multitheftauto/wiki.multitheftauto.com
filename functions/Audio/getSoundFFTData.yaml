client:
  name: getSoundFFTData
  description: |
    This function gets the fast fourier transform data for an audio stream which is a table of floats representing the current audio frame. This allows things like visualisations. A fast fourier transform generates a table of all the frequencies of the current audio frame which starts at the bass end of the spectrum to mids to highs in that order. Should you have any problems there is an example resource located on the resources repository: [Visualiser](https://github.com/multitheftauto/mtasa-resources/tree/master/%5Bgameplay%5D/visualiser).

    Just type <code>startmusic mystreamurl</code> in your console and it will play on the cinema billboard near A51. If the element is a player, this function will use the players voice.
  oop:
    element: sound
    method: getFFTData
  parameters:
    - name: theSound
      type: sound/player
      description: A [[sound]] element that is created using [[playSound]] or [[playSound3D]]. Streams are also supported.
    - name: samples
      type: int
      description: Allowed samples are 256, 512, 1024, 2048, 4096, 8192 and 16384.
    - name: bands
      type: int
      description: Post processing option allows you to split the samples into the desired amount of bands or bars so if you only need 5 bars this saves a lot of cpu power compared to trying to do it in Lua.
      default: '0'
  returns:
    values:
      - type: table|false
        name: fft-data
    description: Returns a [[table]] of <b>samples</b>/2 (or <b>bands</b> if <b>bands</b> is used) floats representing the current audio frame. Returns false if the sound is not playing yet or hasn't buffered in the case of streams.
  examples:
    - path: examples/getSoundFFTData-1.lua
    - path: examples/getSoundFFTData_OOP-1.lua
      oop: true
  meta:
    - changelog:
        - version: '1.3.2'
          description: Added player element to use a players voice.