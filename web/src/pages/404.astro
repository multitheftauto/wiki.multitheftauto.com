---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { OLD_WIKI_URL, OLD_WIKI_REDIRECT } from '@src/content.constants';
---

<StarlightPage frontmatter={{
  template: 'splash',
  title: '404',
  hero: {
    title: '404',
    tagline: Astro.locals.t('404.text')
  }
}}>
    {OLD_WIKI_REDIRECT && (
        <h4>You will be redirected to the old MTA Wiki in <strong><span id="countdown">5</span> seconds...</strong></h4>
    )}
</StarlightPage>

<script is:inline define:vars={{ OLD_WIKI_URL, OLD_WIKI_REDIRECT }}>
    if (!OLD_WIKI_REDIRECT) {
        return;
    }

    async function tryFallbacks() {
        let path = location.pathname;
        // Remove trailing slash if any
        path = path.endsWith('/') ? path.slice(0, -1) : path;

        const tryPath = async (prefix) => {
            const testPath = `${prefix}${path}`;
            try {
                const res = await fetch(testPath, { method: 'HEAD' });
                if (res.ok) {
                    window.location.replace(testPath);
                    return true;
                }
            } catch (_) {}
            return false;
        };

        if (await tryPath('/reference')) return;
        if (await tryPath('/articles')) return;

        // Fallback to old wiki
        let countdown = 5;
        const el = document.getElementById('countdown');
        const interval = setInterval(() => {
            countdown -= 1;
            if (el) el.textContent = countdown;
            if (countdown <= 0) {
                clearInterval(interval);
                window.location.replace(OLD_WIKI_URL + path);
            }
        }, 1000);
    }

    tryFallbacks();
</script>
