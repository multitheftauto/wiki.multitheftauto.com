---
import { Code } from '@astrojs/starlight/components';
import { marked } from 'marked';

interface Props {
  content: string;
  inline?: boolean;
}

const { content, inline = false } = Astro.props;


// We shouldn't this as we're now organizing pages in folders
// TODO let's move away from MediaWiki links in the future

function convertMediaWikiLinks(text: string): string {
  const redirects: Record<string, string> = {
    'ACL': 'acl',
  };

  return text.replace(
    /\[\[([^|\]#]+)(?:#([^\]]+))?(?:\|([^\]]+))?\]\]/g,
    (_, link, hash, text) => {
      const redirectedLink = redirects[link] ?? link;
      const url = `/reference/${redirectedLink}${hash ? `#${hash}` : ''}`;
      return `[${text || link}](${url})`;
    }
  );
}

const processedContent = convertMediaWikiLinks(content);
const tokens = inline ? marked.Lexer.lexInline(processedContent) : marked.lexer(processedContent);
---

{
  tokens.map((token) => {
    if (token.type === 'code') {
      return <Code code={token.text} lang={token.lang || 'text'} />;
    }

    if (inline) {
      return <Fragment set:html={marked.parseInline(token.raw ?? token.text ?? '')} />;
    }

    return <Fragment set:html={marked.parser([token])} />;
  })
}